1.1 â€“ Write a MongoDb query to display all the documents in
the restaurant collection. >>> db.resturant.find()

1.2 - Write a MongoDb query to display all restaurants that
have a specific cuisine >>>  db.resturant.find({cuisine:"junk food"})

1.3 - Write a MongoDb query that displays only kosher
restaurants >>> db.resturant.find({kosher:true})

1.4 - Write a MongoDb query that displays only a specific cities
restaurants >>> db.resturant.find({"adress.city":"Ashkelon"}); 

1.5 - Write a MongoDb query to display a specific restaurants
address >> db.resturant.findOne({name:"Eat me"}).adress

1.6 - Write a MongoDb query to display a specific restaurants
coordinates >> db.resturant.findOne({name:"Eat me"}).adress.coordinates

1.7. - Write a MongoDb query that should display all
restaurants in ascending order by restaurant name. >> db.resturant.find().sort( { name: 1 } )

1.8 - Write a MongoDb query that should display all restaurants
in ascending order by city names. >>>> db.resturant.find().sort({"adress.city":1});

1.9 - Update a specific restaurant's name >>> db.resturant.updateOne({"_id" : ObjectId("62af497a831a073609011067")},{$set:{name:"EAT ME"}})

1.10 - Update a specific restaurant by adding a new review.
>>> db.resturant.updateOne({name:"EAT ME"},{$push:{reviews:{date:"jun 22",score:1}}})

1.11 - Update all restaurants to be kosher 
>>> db.resturant.updateMany({},{$set:{kosher:true}})

1.12 - Delete a specific restaurant
>>> db.resturant.deleteOne({_id:ObjectId("5ff6ffa6f91717875a68fc09")})

1.13 - Delete all restaurants
>>>db.resturant.drop()

2. forEach Queries
2.1 - Write a MongoDb query to print all restaurant names.
>>> db.resturant.find().forEach(r=>print(r.name))

2.2 - Write a MongoDb query to print all restaurant cities
>>> db.resturant.find().forEach(r=>print(r.adress.city))

2.3 - Write a MongoDb query to print all restaurant coordinates
>>> db.resturant.find().forEach(r=>print(r.adress.coordinates))

3. Advanced Queries
3.1 - Query for restaurant names that start with a specific
alphabet
>>> db.resturant.find({name: { '$regex': 'Piz', '$options': 'g' }}, {})

3.2 - Query how many documents you have from the restaurant
collection. 
>>>db.resturant.count()

3.3 - Write a MongoDb query to get restaurants that include
reviews from a specific date.
>>> db.resturant.find({"reviews.date":{$all:["Feb 19"]}})

4.1- Write a mongoDb query to display all restaurants average
score.
>>> 

4.2 - Write a mongoDb query to display a specific restaurant
average score

